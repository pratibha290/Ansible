---
- name: Key based login
  hosts: fundbridge_web,edh-web
  become: yes

  vars:
    users:
      - { name: "pratibha", home: "/home/pratibha", state: "present" }
      - { name: "aayush", home: "/home/aayush", state: "present" }
      - { name: "sneha", home: "/home/sneha", state: "present" }
      - { name: "kalpana", home: "/home/kalpana", state: "present" }
      
  tasks:
    - name: Ensure users exist on localhost
      ansible.builtin.user:
        name: "{{ item.name }}"
        state: present
        home: "{{ item.home }}"
      loop: "{{ users }}"
      delegate_to: edh-api

    - name: Ensure users exist on target machine
      ansible.builtin.user:
        name: "{{ item.name }}"
        state: present
        home: "{{ item.home }}"
      loop: "{{ users }}"

    - name: Ensure .ssh directory exists on localhost
      ansible.builtin.file:
        path: "{{ item.home }}/.ssh"
        state: directory
        owner: "{{ item.name }}"
        group: "{{ item.name }}"
        mode: "0700"
      loop: "{{ users }}"
      delegate_to: edh-api

    - name: Check if SSH key exists on source machine
      ansible.builtin.stat:
        path: "{{ item.home }}/.ssh/id_rsa"
      register: ssh_key_status
      loop: "{{ users }}"
      delegate_to: edh-api

    - name: Generating SSH keypair for specified users on source machine
      ansible.builtin.openssh_keypair:
        path: "{{ item.item.home }}/.ssh/id_rsa"
        size: 2048
        type: rsa
        mode: '0600'
        owner: "{{ item.item.name }}"
        group: "{{ item.item.name }}"
      loop: "{{ ssh_key_status.results }}"
      delegate_to: edh-api
      when: item.stat.exists == false

    - name: Get public keys for each user
      ansible.builtin.command:
        cmd: cat {{ item.item.home }}/.ssh/id_rsa.pub
      loop: "{{ ssh_key_status.results }}"
      loop_control:
        label: "{{ item.item.name }}"
      delegate_to: edh-api
      register: publicKeys

    # Send public keys to user authorized key file
    - name: Send pubKey to user authorized key file
      ansible.posix.authorized_key:
        user: "{{ item.item.item.name }}"
        state: present
        key: "{{ item.stdout }}"
      loop: "{{ publicKeys.results }}"
